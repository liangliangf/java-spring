<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.liang.service.UserServiceImpl"/>
    <bean id="log" class="com.liang.Log.Log"/>
    <bean id="logAfter" class="com.liang.Log.AfterLog"/>


    <!--方式3，注解-->
    <bean id="annotationPointCut" class="com.liang.diy.AnnotationPointCut"></bean>
    <aop:aspectj-autoproxy />


    <!--方式1，使用原生Spring API 接口-->
    <!--配置AOP:需要导入AOP 约束-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点（可以有多个）：expression:表达式，execution(要执行的位置，*.*.*.*.*)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.liang.service.UserServiceImpl.*(..))"/>-->

<!--        &lt;!&ndash;执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="logAfter" pointcut-ref="pointcut" />-->
<!--    </aop:config>-->


    <!--方式2，自定义来实现AOP (主要是切面定义)-->
<!--    <bean id="diy" class="com.liang.diy.DiyPointCut"></bean>-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;自定义切面，ref:要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash;切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.liang.service.UserServiceImpl.*(..))"/>-->
<!--            &lt;!&ndash;通知&ndash;&gt;-->
<!--            <aop:before method="befour" pointcut-ref="point"></aop:before>-->
<!--            <aop:after method="after" pointcut-ref="point"></aop:after>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->



</beans>